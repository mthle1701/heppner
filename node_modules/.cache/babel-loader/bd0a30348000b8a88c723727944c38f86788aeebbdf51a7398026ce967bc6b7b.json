{"ast":null,"code":"var _jsxFileName = \"/Users/matthieu/IdeaProjects/heppner/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const url = 'VOTRE_URL_CSV';\n    fetch(url).then(response => response.text()).then(csvData => {\n      const rows = csvData.split('\\n').map(row => row.split(','));\n      setData(rows);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Donn\\xE9es de ma feuille Google Sheets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: data.length > 0 && data[0].map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.slice(1).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","data","setData","url","fetch","then","response","text","csvData","rows","split","map","row","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","header","index","slice","cell","_c","$RefreshReg$"],"sources":["/Users/matthieu/IdeaProjects/heppner/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n    const [data, setData] = useState<string[][]>([]);\n\n    useEffect(() => {\n        const url = 'VOTRE_URL_CSV';\n\n        fetch(url)\n            .then(response => response.text())\n            .then(csvData => {\n                const rows = csvData.split('\\n').map(row => row.split(','));\n                setData(rows);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <h1>Donn√©es de ma feuille Google Sheets</h1>\n            <table>\n                <thead>\n                <tr>\n                    {data.length > 0 && data[0].map((header, index) => (\n                        <th key={index}>{header}</th>\n                    ))}\n                </tr>\n                </thead>\n                <tbody>\n                {data.slice(1).map((row, index) => (\n                    <tr key={index}>\n                        {row.map((cell, index) => (\n                            <td key={index}>{cell}</td>\n                        ))}\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAa,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAMO,GAAG,GAAG,eAAe;IAE3BC,KAAK,CAACD,GAAG,CAAC,CACLE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,OAAO,IAAI;MACb,MAAMC,IAAI,GAAGD,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACF,KAAK,CAAC,GAAG,CAAC,CAAC;MAC3DR,OAAO,CAACO,IAAI,CAAC;IACjB,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIhB,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBpB,OAAA;MAAAoB,QAAA,EAAI;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CxB,OAAA;MAAAoB,QAAA,gBACIpB,OAAA;QAAAoB,QAAA,eACApB,OAAA;UAAAoB,QAAA,EACKjB,IAAI,CAACsB,MAAM,GAAG,CAAC,IAAItB,IAAI,CAAC,CAAC,CAAC,CAACU,GAAG,CAAC,CAACa,MAAM,EAAEC,KAAK,kBAC1C3B,OAAA;YAAAoB,QAAA,EAAiBM;UAAM,GAAdC,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAC/B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACRxB,OAAA;QAAAoB,QAAA,EACCjB,IAAI,CAACyB,KAAK,CAAC,CAAC,CAAC,CAACf,GAAG,CAAC,CAACC,GAAG,EAAEa,KAAK,kBAC1B3B,OAAA;UAAAoB,QAAA,EACKN,GAAG,CAACD,GAAG,CAAC,CAACgB,IAAI,EAAEF,KAAK,kBACjB3B,OAAA;YAAAoB,QAAA,EAAiBS;UAAI,GAAZF,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC7B;QAAC,GAHGG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACtB,EAAA,CAxCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}